{"code":"webpackHotUpdate(\"main\",{\"./components/TodoList/TodoItemEditView.jsx\":function(module,__webpack_exports__,__webpack_require__){\"use strict\";eval('__webpack_require__.r(__webpack_exports__);\\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"../node_modules/react/index.js\");\\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! prop-types */ \"../node_modules/prop-types/index.js\");\\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_1__);\\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\\n\\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\\n\\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\\n\\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\\n\\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\\n\\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\\n\\n\\n\\n\\nvar TodoItemEditView = function TodoItemEditView(_ref) {\\n  var todo = _ref.todo,\\n      onEnter = _ref.onEnter;\\n  var textInput = null;\\n  var id = todo.id,\\n      title = todo.title;\\n\\n  var _useState = Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useState\"])(title),\\n      _useState2 = _slicedToArray(_useState, 2),\\n      newTitle = _useState2[0],\\n      setNewTitle = _useState2[1];\\n\\n  Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useEffect\"])(function () {\\n    textInput.focus();\\n  });\\n\\n  var handleKeyPress = function handleKeyPress(event) {\\n    if (event.key === \\'Enter\\') {\\n      onEnter(newTitle);\\n    }\\n  };\\n\\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"li\", {\\n    className: \"todo-item-edit\"\\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"input\", {\\n    type: \"text\",\\n    value: newTitle,\\n    ref: function ref(input) {\\n      textInput = input;\\n    },\\n    onChange: function onChange(e) {\\n      return setNewTitle(e.target.value);\\n    },\\n    onKeyPress: handleKeyPress\\n  }));\\n};\\n\\nTodoItemEditView.propTypes = {\\n  todo: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.instanceOf(Object).isRequired,\\n  onEnter: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func.isRequired\\n};\\n/* harmony default export */ __webpack_exports__[\"default\"] = (TodoItemEditView);\\n\\n//# sourceURL=webpack:///./components/TodoList/TodoItemEditView.jsx?')}});","extractedComments":["/*!**************************************************!*\\\n  !*** ./components/TodoList/TodoItemEditView.jsx ***!\n  \\**************************************************/","/*! exports provided: default */"]}